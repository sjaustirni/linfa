(function() {var implementors = {};
implementors["linfa"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"linfa/dataset/struct.Pr.html\" title=\"struct linfa::dataset::Pr\">Pr</a>","synthetic":false,"types":["linfa::dataset::Pr"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"linfa/error/enum.Error.html\" title=\"enum linfa::error::Error\">Error</a>","synthetic":false,"types":["linfa::error::Error"]}];
implementors["linfa_clustering"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"linfa_clustering/struct.AppxDbscan.html\" title=\"struct linfa_clustering::AppxDbscan\">AppxDbscan</a>","synthetic":false,"types":["linfa_clustering::appx_dbscan::algorithm::AppxDbscan"]},{"text":"impl&lt;F:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"linfa/dataset/trait.Float.html\" title=\"trait linfa::dataset::Float\">Float</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"linfa_clustering/struct.AppxDbscanHyperParams.html\" title=\"struct linfa_clustering::AppxDbscanHyperParams\">AppxDbscanHyperParams</a>&lt;F&gt;","synthetic":false,"types":["linfa_clustering::appx_dbscan::hyperparameters::AppxDbscanHyperParams"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"linfa_clustering/struct.Dbscan.html\" title=\"struct linfa_clustering::Dbscan\">Dbscan</a>","synthetic":false,"types":["linfa_clustering::dbscan::algorithm::Dbscan"]},{"text":"impl&lt;F:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"linfa/dataset/trait.Float.html\" title=\"trait linfa::dataset::Float\">Float</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"linfa_clustering/struct.DbscanHyperParams.html\" title=\"struct linfa_clustering::DbscanHyperParams\">DbscanHyperParams</a>&lt;F&gt;","synthetic":false,"types":["linfa_clustering::dbscan::hyperparameters::DbscanHyperParams"]},{"text":"impl&lt;F:&nbsp;<a class=\"trait\" href=\"linfa/dataset/trait.Float.html\" title=\"trait linfa::dataset::Float\">Float</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"linfa_clustering/struct.GaussianMixtureModel.html\" title=\"struct linfa_clustering::GaussianMixtureModel\">GaussianMixtureModel</a>&lt;F&gt;","synthetic":false,"types":["linfa_clustering::gaussian_mixture::algorithm::GaussianMixtureModel"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"linfa_clustering/enum.GmmCovarType.html\" title=\"enum linfa_clustering::GmmCovarType\">GmmCovarType</a>","synthetic":false,"types":["linfa_clustering::gaussian_mixture::hyperparameters::GmmCovarType"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"linfa_clustering/enum.GmmInitMethod.html\" title=\"enum linfa_clustering::GmmInitMethod\">GmmInitMethod</a>","synthetic":false,"types":["linfa_clustering::gaussian_mixture::hyperparameters::GmmInitMethod"]},{"text":"impl&lt;F:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"linfa/dataset/trait.Float.html\" title=\"trait linfa::dataset::Float\">Float</a>, R:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.Rng.html\" title=\"trait rand::Rng\">Rng</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"linfa_clustering/struct.GmmHyperParams.html\" title=\"struct linfa_clustering::GmmHyperParams\">GmmHyperParams</a>&lt;F, R&gt;","synthetic":false,"types":["linfa_clustering::gaussian_mixture::hyperparameters::GmmHyperParams"]},{"text":"impl&lt;F:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"linfa/dataset/trait.Float.html\" title=\"trait linfa::dataset::Float\">Float</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"linfa_clustering/struct.KMeans.html\" title=\"struct linfa_clustering::KMeans\">KMeans</a>&lt;F&gt;","synthetic":false,"types":["linfa_clustering::k_means::algorithm::KMeans"]},{"text":"impl&lt;F:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"linfa/dataset/trait.Float.html\" title=\"trait linfa::dataset::Float\">Float</a> + <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a> + for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a </a>F&gt;, R:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.Rng.html\" title=\"trait rand::Rng\">Rng</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"linfa_clustering/struct.KMeansHyperParams.html\" title=\"struct linfa_clustering::KMeansHyperParams\">KMeansHyperParams</a>&lt;F, R&gt;","synthetic":false,"types":["linfa_clustering::k_means::hyperparameters::KMeansHyperParams"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"linfa_clustering/enum.KMeansInit.html\" title=\"enum linfa_clustering::KMeansInit\">KMeansInit</a>","synthetic":false,"types":["linfa_clustering::k_means::init::KMeansInit"]}];
implementors["linfa_elasticnet"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"linfa_elasticnet/enum.Error.html\" title=\"enum linfa_elasticnet::Error\">Error</a>","synthetic":false,"types":["linfa_elasticnet::error::Error"]}];
implementors["linfa_kernel"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"linfa_kernel/enum.KernelType.html\" title=\"enum linfa_kernel::KernelType\">KernelType</a>","synthetic":false,"types":["linfa_kernel::KernelType"]},{"text":"impl&lt;F:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"linfa_kernel/enum.KernelMethod.html\" title=\"enum linfa_kernel::KernelMethod\">KernelMethod</a>&lt;F&gt;","synthetic":false,"types":["linfa_kernel::KernelMethod"]}];
implementors["linfa_linear"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"linfa_linear/enum.Link.html\" title=\"enum linfa_linear::Link\">Link</a>","synthetic":false,"types":["linfa_linear::glm::link::Link"]}];
implementors["linfa_pls"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"linfa_pls/struct.PlsSvdParams.html\" title=\"struct linfa_pls::PlsSvdParams\">PlsSvdParams</a>","synthetic":false,"types":["linfa_pls::pls_svd::PlsSvdParams"]}];
implementors["linfa_reduction"] = [{"text":"impl&lt;F:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"linfa_reduction/pca/struct.Pca.html\" title=\"struct linfa_reduction::pca::Pca\">Pca</a>&lt;F&gt;","synthetic":false,"types":["linfa_reduction::pca::Pca"]}];
implementors["linfa_svm"] = [{"text":"impl&lt;F:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"linfa/dataset/trait.Float.html\" title=\"trait linfa::dataset::Float\">Float</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"linfa_svm/solver_smo/struct.SolverParams.html\" title=\"struct linfa_svm::solver_smo::SolverParams\">SolverParams</a>&lt;F&gt;","synthetic":false,"types":["linfa_svm::solver_smo::SolverParams"]}];
implementors["linfa_trees"] = [{"text":"impl&lt;F:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, L:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"linfa_trees/struct.TreeNode.html\" title=\"struct linfa_trees::TreeNode\">TreeNode</a>&lt;F, L&gt;","synthetic":false,"types":["linfa_trees::decision_trees::algorithm::TreeNode"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"linfa_trees/enum.SplitQuality.html\" title=\"enum linfa_trees::SplitQuality\">SplitQuality</a>","synthetic":false,"types":["linfa_trees::decision_trees::hyperparameters::SplitQuality"]},{"text":"impl&lt;F:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, L:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"linfa_trees/struct.DecisionTreeParams.html\" title=\"struct linfa_trees::DecisionTreeParams\">DecisionTreeParams</a>&lt;F, L&gt;","synthetic":false,"types":["linfa_trees::decision_trees::hyperparameters::DecisionTreeParams"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()